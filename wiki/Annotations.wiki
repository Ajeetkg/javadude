=Overview=
The !JavaDude Annotations are Java 5/6 annotations and annotation processors that generate some of the tedious code you need in your day-to-day programming. Using these annotations, you can generate:

|| Properties || fields with is/get/set accessor/mutator methods, optionally firing !PropertyChangeEvents when their value has been changed. ||
|| Observer Pattern || code to track and manage added observer/listener objects (defined by their listener interfaces) and fire events to those objects. ||
|| Prototype Pattern || the java clone() method. hashCode() / equals() / toString() - basic implementations of these methods using properties that have been defined for the bean. ||
|| Delegation || generation of delegation methods. All methods in named interfaces will delegate to a specified implementation class or bean property. ||
|| Null Object Pattern || all methods in named interfaces will perform "null" operations; void methods do nothing, while non-void methods return null, false, or 0. || 
|| Interface Extraction || an interface will be generated for all public methods in a class, or just those that are explicitly tagged for export. ||

=Documentation=
(Work in progress... might be a while...)
 * [AnnotationsQuickRef Quick Reference]
 * [AnnotationsExamples Examples]

=Downloading and Installation=
==Jars==
If you're using the eclipse plugin or not, you'll still need to download the annotation jar, which contains the annotations and the annotation processors. Download

com.javadude.annotation_2.0.18.jar 
velocity-dep-1.5.jar 

--------------------------------------------------------------------------------

==Annotation Processing and Compilation==
Depending upon how you edit your code, you will need different combinations of jars and plugins.

===In Eclipse===
Eclipse Plugin
If you're using Eclipse for development, you'll want to download the eclipse plugin.

If you know how to use the Eclipse Update Manager:

Update Site URL: http://javadude.googlecode.com/svn/trunk/com.javadude.updatesite
Select Annotations.

If you're not sure how to use the Eclipse Update Manager open the Eclipse Help->Help Contents, and read the section under 

  Workbench User Guide->Tasks->Updating Features with the update Manager->Installing new features with the update manager.

===Project Setup===
If you're creating a plugin, you can add a dependency to the com.javadude.annotation plugin. Otherwise:

 * Download com.javadude.annotation_2.0.18.jar and import it into your project. 
 * Right-click on the jar and choose Build Path->Add to Build Path. (This gives you access to the annotation definitions so you can use them in your code.) 
 * Open your project properties (Select the project and press Alt-Enter) 
 * Go to Java Compiler->Annotation Processing 
 * Check Enable project specific settings 
 * Uncheck Enable processing in editor (not really necessary but can improve performance slightly) 
 * The plugin will automatically process the @Bean and @!ExtractInterface annotations.


===In Ant===
 

==Runtime==
The generated code does not have any dependencies; you can run without adding extra jars to your classpath!